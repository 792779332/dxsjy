<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dxsjy.Mapper.Graduate_recordMapper">
  <resultMap id="BaseResultMap" type="com.example.dxsjy.Bean.Graduate_record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="graduate_id1" jdbcType="INTEGER" property="graduateId1" />
    <result column="trainning" jdbcType="VARCHAR" property="trainning" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="stop_time" jdbcType="DATE" property="stopTime" />
    <result column="all_time" jdbcType="INTEGER" property="allTime" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="trainning_depart" jdbcType="VARCHAR" property="trainningDepart" />
    <result column="trainning_money" jdbcType="INTEGER" property="trainningMoney" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.dxsjy.Bean.Graduate_recordWithBLOBs">
    <result column="trainning_text" jdbcType="LONGVARCHAR" property="trainningText" />
    <result column="trainning_result" jdbcType="LONGVARCHAR" property="trainningResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, graduate_id1, trainning, start_time, stop_time, all_time, major, trainning_depart, 
    trainning_money
  </sql>
  <sql id="Blob_Column_List">
    trainning_text, trainning_result
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.dxsjy.Bean.Graduate_recordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from graduate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.dxsjy.Bean.Graduate_recordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from graduate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from graduate_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from graduate_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.dxsjy.Bean.Graduate_recordExample">
    delete from graduate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.dxsjy.Bean.Graduate_recordWithBLOBs">
    insert into graduate_record (id, graduate_id1, trainning, 
      start_time, stop_time, all_time, 
      major, trainning_depart, trainning_money, 
      trainning_text, trainning_result)
    values (#{id,jdbcType=INTEGER}, #{graduateId1,jdbcType=INTEGER}, #{trainning,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{stopTime,jdbcType=DATE}, #{allTime,jdbcType=INTEGER}, 
      #{major,jdbcType=VARCHAR}, #{trainningDepart,jdbcType=VARCHAR}, #{trainningMoney,jdbcType=INTEGER}, 
      #{trainningText,jdbcType=LONGVARCHAR}, #{trainningResult,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.dxsjy.Bean.Graduate_recordWithBLOBs">
    insert into graduate_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="graduateId1 != null">
        graduate_id1,
      </if>
      <if test="trainning != null">
        trainning,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="allTime != null">
        all_time,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="trainningDepart != null">
        trainning_depart,
      </if>
      <if test="trainningMoney != null">
        trainning_money,
      </if>
      <if test="trainningText != null">
        trainning_text,
      </if>
      <if test="trainningResult != null">
        trainning_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="graduateId1 != null">
        #{graduateId1,jdbcType=INTEGER},
      </if>
      <if test="trainning != null">
        #{trainning,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=DATE},
      </if>
      <if test="allTime != null">
        #{allTime,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="trainningDepart != null">
        #{trainningDepart,jdbcType=VARCHAR},
      </if>
      <if test="trainningMoney != null">
        #{trainningMoney,jdbcType=INTEGER},
      </if>
      <if test="trainningText != null">
        #{trainningText,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningResult != null">
        #{trainningResult,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.dxsjy.Bean.Graduate_recordExample" resultType="java.lang.Long">
    select count(*) from graduate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update graduate_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.graduateId1 != null">
        graduate_id1 = #{record.graduateId1,jdbcType=INTEGER},
      </if>
      <if test="record.trainning != null">
        trainning = #{record.trainning,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.stopTime != null">
        stop_time = #{record.stopTime,jdbcType=DATE},
      </if>
      <if test="record.allTime != null">
        all_time = #{record.allTime,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.trainningDepart != null">
        trainning_depart = #{record.trainningDepart,jdbcType=VARCHAR},
      </if>
      <if test="record.trainningMoney != null">
        trainning_money = #{record.trainningMoney,jdbcType=INTEGER},
      </if>
      <if test="record.trainningText != null">
        trainning_text = #{record.trainningText,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.trainningResult != null">
        trainning_result = #{record.trainningResult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update graduate_record
    set id = #{record.id,jdbcType=INTEGER},
      graduate_id1 = #{record.graduateId1,jdbcType=INTEGER},
      trainning = #{record.trainning,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=DATE},
      stop_time = #{record.stopTime,jdbcType=DATE},
      all_time = #{record.allTime,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      trainning_depart = #{record.trainningDepart,jdbcType=VARCHAR},
      trainning_money = #{record.trainningMoney,jdbcType=INTEGER},
      trainning_text = #{record.trainningText,jdbcType=LONGVARCHAR},
      trainning_result = #{record.trainningResult,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update graduate_record
    set id = #{record.id,jdbcType=INTEGER},
      graduate_id1 = #{record.graduateId1,jdbcType=INTEGER},
      trainning = #{record.trainning,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=DATE},
      stop_time = #{record.stopTime,jdbcType=DATE},
      all_time = #{record.allTime,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      trainning_depart = #{record.trainningDepart,jdbcType=VARCHAR},
      trainning_money = #{record.trainningMoney,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dxsjy.Bean.Graduate_recordWithBLOBs">
    update graduate_record
    <set>
      <if test="graduateId1 != null">
        graduate_id1 = #{graduateId1,jdbcType=INTEGER},
      </if>
      <if test="trainning != null">
        trainning = #{trainning,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=DATE},
      </if>
      <if test="allTime != null">
        all_time = #{allTime,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="trainningDepart != null">
        trainning_depart = #{trainningDepart,jdbcType=VARCHAR},
      </if>
      <if test="trainningMoney != null">
        trainning_money = #{trainningMoney,jdbcType=INTEGER},
      </if>
      <if test="trainningText != null">
        trainning_text = #{trainningText,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainningResult != null">
        trainning_result = #{trainningResult,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.dxsjy.Bean.Graduate_recordWithBLOBs">
    update graduate_record
    set graduate_id1 = #{graduateId1,jdbcType=INTEGER},
      trainning = #{trainning,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      stop_time = #{stopTime,jdbcType=DATE},
      all_time = #{allTime,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      trainning_depart = #{trainningDepart,jdbcType=VARCHAR},
      trainning_money = #{trainningMoney,jdbcType=INTEGER},
      trainning_text = #{trainningText,jdbcType=LONGVARCHAR},
      trainning_result = #{trainningResult,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dxsjy.Bean.Graduate_record">
    update graduate_record
    set graduate_id1 = #{graduateId1,jdbcType=INTEGER},
      trainning = #{trainning,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      stop_time = #{stopTime,jdbcType=DATE},
      all_time = #{allTime,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      trainning_depart = #{trainningDepart,jdbcType=VARCHAR},
      trainning_money = #{trainningMoney,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>